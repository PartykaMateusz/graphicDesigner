server.port=8082

client-adress=http://localhost:3000

#LOCALHOST:
#spring.datasource.url=jdbc:postgresql://localhost:5432/graphicDesigner
#spring.datasource.username=postgres
#spring.datasource.password=password
#spring.jpa.generate-ddl = true


#CLOUD
spring.datasource.url=jdbc:postgresql://google/graphicDesigner?cloudSqlInstance=designer-261314:europe-north1:graphic--designer&socketFactory=com.google.cloud.sql.postgres.SocketFactory
spring.datasource.username=postgres
spring.datasource.password=aaaabbbbbXXXXtest

spring.cloud.gcp.sql.database-name=graphicDesigner
spring.cloud.gcp.sql.instance-connection-name=designer-261314:europe-north1:graphic--designer

spring.cloud.appId=instance-1


spring.datasource.driver-class-name=org.postgresql.Driver

#prefix= classpath:/templates

# The SQL dialect makes Hibernate generate better SQL for the chosen database
# Hibernate ddl auto (create, create-drop, validate, update)
spring.jpa.hibernate.ddl-auto = update

# Naming strategy
spring.jpa.hibernate.naming.implicit-strategy=org.hibernate.boot.model.naming.ImplicitNamingStrategyLegacyHbmImpl
spring.jpa.hibernate.naming.physical-strategy=org.springframework.boot.orm.jpa.hibernate.SpringPhysicalNamingStrategy

# Allows Hibernate to generate SQL optimized for a particular DBMS
spring.jpa.properties.hibernate.dialect=org.hibernate.dialect.PostgreSQLDialect

spring.jpa.properties.hibernate.jdbc.lob.non_contextual_creation=true


spring.data.rest.base-path=/api


##################### J W T ########################

security.oauth2.resource.filter-order=3

security.signing-key=MaYzkSjmkzPC57L
security.encoding-strength=256
security.security-realm=Spring Boot JWT Example Realm

security.jwt.client-id=clientReact
security.jwt.client-secret=reactPassword
security.jwt.grant-type=password
security.jwt.scope-read=read
security.jwt.scope-write=write
security.jwt.resource-ids=testjwtresourceid
